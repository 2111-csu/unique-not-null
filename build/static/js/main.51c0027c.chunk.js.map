{"version":3,"sources":["axios-services/index.js","components/App.js","index.js"],"names":["getAPIHealth","a","axios","get","data","console","error","healthy","App","useState","APIHealth","setAPIHealth","useEffect","getAPIStatus","className","ReactDOM","render","document","getElementById"],"mappings":"qSAoBO,SAAeA,IAAtB,+B,4CAAO,8BAAAC,EAAA,+EAEoBC,IAAMC,IAAI,eAF9B,uBAEKC,EAFL,EAEKA,KAFL,kBAGIA,GAHJ,uCAKHC,QAAQC,MAAR,MALG,kBAMI,CAAEC,SAAS,IANf,0D,gCCYQC,EAzBH,WACV,MAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KAgBA,OAdAC,qBAAU,YAIU,uCAAG,8BAAAX,EAAA,sEACOD,IADP,gBACXO,EADW,EACXA,QACRI,EAAaJ,EAAU,gBAAkB,kBAFtB,2CAAH,qDAOlBM,KACC,IAGD,yBAAKC,UAAU,iBACb,6CACA,0CAAgBJ,K,MCpBtBK,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.51c0027c.chunk.js","sourcesContent":["import axios from 'axios';\r\n\r\n// this file holds your frontend network request adapters\r\n// think about each function as a service that provides data\r\n// to your React UI through AJAX calls\r\n\r\n// for example, if we need to display a list of users\r\n// we'd probably want to define a getUsers service like this:\r\n\r\n/* \r\n  export async function getUsers() {\r\n    try {\r\n      const { data: users } = await axios.get('/api/users')\r\n      return users;\r\n    } catch(err) {\r\n      console.error(err)\r\n    }\r\n  }\r\n*/\r\n\r\nexport async function getAPIHealth() {\r\n  try {\r\n    const { data } = await axios.get('/api/health');\r\n    return data;\r\n  } catch (err) {\r\n    console.error(err);\r\n    return { healthy: false };\r\n  }\r\n}\r\n","import React, { useState, useEffect } from 'react';\r\n// getAPIHealth is defined in our axios-services directory index.js\r\n// you can think of that directory as a collection of api adapters\r\n// where each adapter fetches specific info from our express server's /api route\r\nimport { getAPIHealth } from '../axios-services';\r\nimport '../style/App.css';\r\n\r\nconst App = () => {\r\n  const [APIHealth, setAPIHealth] = useState('');\r\n\r\n  useEffect(() => {\r\n    // follow this pattern inside your useEffect calls:\r\n    // first, create an async function that will wrap your axios service adapter\r\n    // invoke the adapter, await the response, and set the data\r\n    const getAPIStatus = async () => {\r\n      const { healthy } = await getAPIHealth();\r\n      setAPIHealth(healthy ? 'api is up! :D' : 'api is down :/');\r\n    };\r\n\r\n    // second, after you've defined your getter above\r\n    // invoke it immediately after its declaration, inside the useEffect callback\r\n    getAPIStatus();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"app-container\">\r\n      <h1>Hello, World!</h1>\r\n      <p>API Status: {APIHealth}</p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { App } from './components';\r\n// css stylesheets can be created for each component\r\n// place them in the src/style directory, and import them like this:\r\nimport './style/index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n"],"sourceRoot":""}